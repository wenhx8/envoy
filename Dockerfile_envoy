FROM docker.io/wenhx8/envoy:gn1.0 AS gn
FROM ubuntu:18.04 AS clang

RUN apt-get update && apt-get -y dist-upgrade && apt-get install -y --no-install-recommends \
    xz-utils \
    wget \
    ca-certificates \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

ENV LLVM_DIRECTORY=/usr/lib/llvm-10

RUN set -eux; \
    \
    case $(uname -m) in \
        x86_64) \
            export LLVM_ARCHIVE=clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04; \
            export LLVM_ARCHIVE_URL=https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/${LLVM_ARCHIVE}.tar.xz; \
            ;; \
        aarch64) \
            export LLVM_ARCHIVE=clang+llvm-10.0.1-aarch64-linux-gnu; \
            export LLVM_ARCHIVE_URL=https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.1/${LLVM_ARCHIVE}.tar.xz; \
            ;; \
        *) echo "unsupported architecture"; exit 1 ;; \
    esac; \
    \
    wget -O ${LLVM_ARCHIVE}.tar.xz "${LLVM_ARCHIVE_URL}"; \
    tar -Jxf ./${LLVM_ARCHIVE}.tar.xz -C /tmp; \
    mkdir -p ${LLVM_DIRECTORY}; \
    mv /tmp/${LLVM_ARCHIVE}/* ${LLVM_DIRECTORY}/; \
    chown -R root:root ${LLVM_DIRECTORY}; \
    rm -R /tmp/*


FROM golang:1.16.5 AS bazel

ARG TARGETARCH
RUN set -eux; \
    \
    wget -O /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-${TARGETARCH:-arm64}; \
    chmod +x /usr/local/bin/bazel

RUN go get github.com/bazelbuild/buildtools/buildifier
RUN go get github.com/bazelbuild/buildtools/buildozer

FROM ubuntu:18.04

ENV DEBIAN_FRONTEND noninteractive

# copy from  https://github.com/istio/tools/blob/release-1.9/docker/build-tools/Dockerfile#L611-L636
RUN apt-get update && apt-get -y dist-upgrade && apt-get install -y --no-install-recommends \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg-agent \
        software-properties-common \
        ca-certificates \
        gcc \
        git \
        ssh \
        libltdl7 \
        libc-dev \
        make \
        pkg-config \
        python3 \
        python3-setuptools \
        daemon \
        wget \
        jq \
        tshark \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*

# copy from https://github.com/istio/tools/blob/release-1.9/docker/build-tools/Dockerfile#L658-L671
RUN apt-get update && apt-get install -y --no-install-recommends \
        autoconf \
        automake \
        cmake \
        libtool \
        ninja-build \
        python \
        unzip \
        virtualenv \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*


# llvm
ENV LLVM_DIRECTORY=/usr/lib/llvm-10

COPY --from=clang ${LLVM_DIRECTORY}/lib ${LLVM_DIRECTORY}/lib
COPY --from=clang ${LLVM_DIRECTORY}/bin ${LLVM_DIRECTORY}/bin
COPY --from=clang ${LLVM_DIRECTORY}/include ${LLVM_DIRECTORY}/include

ENV PATH=${LLVM_DIRECTORY}/bin:${PATH}

RUN echo "${LLVM_DIRECTORY}/lib" | tee /etc/ld.so.conf.d/llvm.conf

RUN ldconfig

# bazel
COPY --from=bazel /usr/local/bin/bazel /usr/local/bin/bazel
COPY --from=bazel /go/bin/buildifier /usr/local/bin/buildifier
COPY --from=bazel /go/bin/buildozer /usr/local/bin/buildozer

# gn
COPY --from=gn /gn/gn /usr/local/bin/gn
